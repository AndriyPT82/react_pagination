{"version":3,"sources":["components/Poster/Poster.jsx","components/PostersList/PostersList.jsx","components/Paginator/Paginator.jsx","App.jsx","index.js"],"names":["Poster","poster","src","className","alt","PostersList","posters","map","object","key","uuidv4","Paginator","total","perPage","currentPage","handleChange","pagesCount","Math","ceil","type","name","value","disabled","onClick","currentBtn","Array","keys","number","prevBtn","nextBtn","includes","handleControlers","page","classNames","App","state","postersFromServer","length","event","target","postersLimit","setState","validValue","displayCurrentPstersCount","initialPosterNumber","lastPoster","postersLimitCount","validLastPosterNumber","this","startIndex","stopIndex","requestedPosters","slice","postersForDisplay","FormControl","variant","style","marginRight","width","InputLabel","id","Select","onChange","label","item","MenuItem","TextField","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6f62ff4a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Poster.scss';\n\nexport const Poster = ({ poster }) => (\n  <img src={poster} className=\"poster\" alt={poster} />\n);\n\nPoster.propTypes = {\n  poster: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport './PostersList.scss';\n\nimport { Poster } from '../Poster';\n\nexport const PostersList = ({ posters }) => (\n\n  <ul className=\"posters-list\">\n    {\n          posters.map(object => (\n            <li className=\"card\" key={uuidv4()}>\n              <Poster {...object} />\n            </li>\n          ))\n        }\n  </ul>\n\n);\n\nPostersList.propTypes = {\n  posters: PropTypes.arrayOf(\n    PropTypes.object.isRequired,\n  ).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport classNames from 'classnames';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport './Paginator.scss';\n\nconst handleControlers = (pagesCount, currentBtn) => {\n  if (pagesCount <= 4) {\n    return [...Array(pagesCount).keys()].map(number => number + 1);\n  }\n\n  const prevBtn = currentBtn - 1;\n  const nextBtn = currentBtn + 1;\n\n  if ([1, pagesCount].includes(currentBtn)) {\n    return currentBtn === 1\n      ? [1, 2, '...', pagesCount]\n      : [1, '...', pagesCount - 1, pagesCount];\n  }\n\n  if (currentBtn === 2 || nextBtn === pagesCount) {\n    return currentBtn === 2\n      ? [1, currentBtn, nextBtn, '...', pagesCount]\n      : [1, '...', prevBtn, currentBtn, pagesCount];\n  }\n\n  if (currentBtn - 3 === 0 || currentBtn + 2 === pagesCount) {\n    return currentBtn - 3 === 0\n      ? [1, 2, currentBtn, nextBtn, '...', pagesCount]\n      : [1, '...', prevBtn, currentBtn, pagesCount - 1, pagesCount];\n  }\n\n  return [1, '...', prevBtn, currentBtn, nextBtn, '...', pagesCount];\n};\n\nexport const Paginator = ({ total, perPage, currentPage, handleChange }) => {\n  const pagesCount = Math.ceil(total / perPage);\n\n  return (\n    <ul className=\"buttonsContainer\">\n      <button\n        type=\"button\"\n        name=\"currentPage\"\n        className=\"button prev\"\n        value={currentPage - 1}\n        disabled={currentPage === 1}\n        onClick={handleChange}\n      >\n        PREV\n      </button>\n      {\n        handleControlers(pagesCount, currentPage, total, perPage).map(page => (\n          <li\n            key={uuidv4()}\n          >\n            <button\n              type=\"button\"\n              name=\"currentPage\"\n              className={classNames(\n                'button',\n                {\n                  'button--is-active': page === currentPage,\n                },\n              )\n              }\n              value={page}\n              onClick={handleChange}\n            >\n              {page}\n            </button>\n          </li>\n        ))\n      }\n      <button\n        type=\"button\"\n        name=\"currentPage\"\n        className=\"button next\"\n        value={currentPage + 1}\n        disabled={currentPage === pagesCount}\n        onClick={handleChange}\n      >\n        NEXT\n      </button>\n    </ul>\n  );\n};\n\nPaginator.propTypes = {\n  total: PropTypes.number.isRequired,\n  perPage: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\n\nimport './App.css';\n\n// no-extraneous-dependencies\nimport {\n  TextField,\n  Select,\n  MenuItem,\n  InputLabel,\n  FormControl,\n} from '@material-ui/core';\n\nimport postersFromServer from './api/posters.json';\n\nimport { PostersList } from './components/PostersList';\nimport { Paginator } from './components/Paginator';\n\nclass App extends React.Component {\n  state = {\n    posters: postersFromServer,\n    total: postersFromServer.length,\n    perPage: 3,\n    currentPage: 1,\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (value === '...') {\n      return;\n    }\n\n    const postersLimit = postersFromServer.length;\n\n    this.setState(() => {\n      let validValue = +value;\n\n      if (name === 'total') {\n        validValue = +value > postersLimit ? postersLimit : +value;\n      }\n\n      return {\n        [name]: validValue || 1,\n      };\n    });\n\n    if (['perPage', 'total'].includes(name)) {\n      this.setState({\n        currentPage: 1,\n      });\n    }\n  }\n\n  displayCurrentPstersCount = (\n    initialPosterNumber,\n    lastPoster,\n    postersLimitCount,\n  ) => {\n    if (initialPosterNumber === postersLimitCount) {\n      return `${initialPosterNumber} of ${postersLimitCount}`;\n    }\n\n    const validLastPosterNumber = lastPoster > postersLimitCount\n      ? postersLimitCount\n      : lastPoster;\n\n    return `\n    ${initialPosterNumber} - ${validLastPosterNumber} of ${postersLimitCount}\n    `;\n  }\n\n  render() {\n    const { posters, total, perPage, currentPage } = this.state;\n    const startIndex = currentPage * perPage - perPage;\n    const stopIndex = currentPage * perPage;\n\n    const requestedPosters = posters.slice(0, total);\n    const postersForDisplay = requestedPosters.slice(startIndex, stopIndex);\n\n    return (\n      <>\n\n        <div className=\"App\">\n          <header className=\"header\">\n\n            <FormControl\n              variant=\"outlined\"\n              style={{\n                marginRight: '30px',\n                width: '150px',\n              }}\n            >\n              <InputLabel\n                id=\"demo-simple-select-outlined-label\"\n              >\n                Posters Per Page\n              </InputLabel>\n\n              <Select\n                name=\"perPage\"\n                id=\"demo-simple-select-outlined\"\n                value={perPage}\n                onChange={this.handleChange}\n                label=\"posters Per Page\"\n              >\n                {\n                  [3, 6, 12, 24, 45].map(item => (\n                    <MenuItem key={item} value={item}>\n                      {' '}\n                      {item}\n                      {' '}\n                    </MenuItem>\n                  ))\n                }\n              </Select>\n            </FormControl>\n\n            <TextField\n              id=\"outlined-basic\"\n              name=\"total\"\n              label=\"Total Posters\"\n              variant=\"outlined\"\n              value={total}\n              onChange={this.handleChange}\n            />\n          </header>\n\n          <PostersList posters={postersForDisplay} />\n\n          <p\n            className=\"current-posters\"\n          >\n            {\n              this.displayCurrentPstersCount(\n                startIndex + 1,\n                stopIndex,\n                requestedPosters.length,\n              )\n            }\n\n          </p>\n          <Paginator\n            total={total}\n            perPage={perPage}\n            currentPage={currentPage}\n            handleChange={this.handleChange}\n          />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}